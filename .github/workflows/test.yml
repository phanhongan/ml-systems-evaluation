name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "export PATH=\"$HOME/.local/bin:$PATH\"" >> $GITHUB_ENV
      - name: Install dependencies
        run: |
          poetry install --only main,dev
      - name: Lint with flake8
        run: |
          poetry run flake8 ml_eval tests
      - name: Check formatting with black
        run: |
          poetry run black --check ml_eval tests
      - name: Check import order with isort
        run: |
          poetry run isort --check-only ml_eval tests

  type-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "export PATH=\"$HOME/.local/bin:$PATH\"" >> $GITHUB_ENV
      - name: Install dependencies
        run: |
          poetry install --only main,dev
      - name: Type check with mypy
        run: |
          poetry run mypy ml_eval

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "export PATH=\"$HOME/.local/bin:$PATH\"" >> $GITHUB_ENV
      - name: Install dependencies
        run: |
          poetry install --only main,dev
      - name: Build package
        run: |
          poetry build

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: true

      - name: Cache Poetry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: poetry-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-${{ matrix.python-version }}-
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "export PATH=\"$HOME/.local/bin:$PATH\"" >> $GITHUB_ENV
      - name: Install dependencies
        run: |
          poetry install --only main,dev
      - name: Run all tests
        run: |
          poetry run pytest -v --cov=ml_eval --cov-report=xml --cov-report=html --cov-report=term-missing
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: ./coverage.xml

#   docs:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.11'
#       - name: Install Poetry
#         run: |
#           curl -sSL https://install.python-poetry.org | python3 -
#           echo "export PATH=\"$HOME/.local/bin:$PATH\"" >> $GITHUB_ENV
#       - name: Install dependencies
#         run: |
#           poetry install --only main,dev,docs
#       - name: Build docs
#         run: |
#           poetry run mkdocs build

#   publish:
#     if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.11'
#       - name: Install Poetry
#         run: |
#           curl -sSL https://install.python-poetry.org | python3 -
#           echo "export PATH=\"$HOME/.local/bin:$PATH\"" >> $GITHUB_ENV
#       - name: Install dependencies
#         run: |
#           poetry install --only main
#       - name: Publish to PyPI
#         env:
#           POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
#         run: |
#           poetry publish --build
