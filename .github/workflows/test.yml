name: CI

on:
  push:
    branches: [main]
    paths:
      - 'ml_eval/**'
      - 'tests/**'
      - 'examples/**'
      - 'pyproject.toml'
      - 'uv.lock'
      - 'setup.py'
      - 'pytest.ini'
      - '.github/workflows/test.yml'
      - '!docs/**'
      - '!README.md'
      - '!PROJECT_STRUCTURE.md'
      - '!LICENSE'
  pull_request:
    paths:
      - 'ml_eval/**'
      - 'tests/**'
      - 'examples/**'
      - 'pyproject.toml'
      - 'uv.lock'
      - 'setup.py'
      - 'pytest.ini'
      - '.github/workflows/test.yml'
      - '!docs/**'
      - '!README.md'
      - '!PROJECT_STRUCTURE.md'
      - '!LICENSE'

jobs:
  validate:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install UV
        uses: astral-sh/setup-uv@v1
        with:
          version: latest
      - name: Install dependencies
        run: |
          uv pip install --system -e ".[dev]"
      - name: Validate dependencies
        run: |
          uv pip list --system

  lint:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install UV
        uses: astral-sh/setup-uv@v1
        with:
          version: latest
      - name: Install dependencies
        run: |
          uv pip install --system -e ".[dev]"
      - name: Lint and check formatting with Ruff
        run: |
          ruff check .
      - name: Check formatting with Ruff
        run: |
          ruff format --check .

  type-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install UV
        uses: astral-sh/setup-uv@v1
        with:
          version: latest
      - name: Install dependencies
        run: |
          uv pip install --system -e ".[dev]"
      - name: Type check with Ruff
        run: |
          ruff check .

  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install UV
        uses: astral-sh/setup-uv@v1
        with:
          version: latest
      - name: Install dependencies
        run: |
          uv pip install --system -e ".[dev]"
      - name: Build package
        run: |
          uv build

  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: true

      - name: Cache UV
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            .venv
          key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ matrix.python-version }}-
      - name: Install UV
        uses: astral-sh/setup-uv@v1
        with:
          version: latest
      - name: Install dependencies
        run: |
          uv pip install --system -e ".[dev]"
      - name: Run all tests
        run: |
          pytest -v --cov=ml_eval --cov-report=xml --cov-report=html --cov-report=term-missing
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: ./coverage.xml

#   docs:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.11'
#       - name: Install UV
#         uses: astral-sh/setup-uv@v1
#         with:
#           version: latest
#       - name: Install dependencies
#         run: |
#           uv pip install --system -e ".[dev,docs]"
#       - name: Build docs
#         run: |
#           mkdocs build

#   publish:
#     if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.11'
#       - name: Install UV
#         uses: astral-sh/setup-uv@v1
#         with:
#           version: latest
#       - name: Install dependencies
#         run: |
#           uv pip install --system -e "."
#       - name: Publish to PyPI
#         env:
#           UV_INDEX_URL: https://pypi.org/simple/
#           UV_EXTRA_INDEX_URL: https://test.pypi.org/simple/
#         run: |
#           uv publish
