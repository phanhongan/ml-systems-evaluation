system:
  name: "Agentic AI Security Operations Platform"
  persona: "Security Operations Center Analyst"
  criticality: "business_critical"
  description: "Advanced agentic AI platform for automated security alert triage, investigation, and response using LLMs and multi-agent workflows at enterprise scale"

slos:
  agentic_triage_accuracy:
    target: 0.98
    window: "24h"
    description: "Accuracy of multi-agent AI workflows in security alert classification and prioritization"
  
  llm_inference_cost_efficiency:
    target: 0.85
    window: "24h"
    description: "Proportion of LLM inference requests optimized for cost while maintaining accuracy"
  
  rag_retrieval_relevance:
    target: 0.93
    window: "24h"
    description: "Relevance score of RAG-retrieved context for security alert analysis"
  
  investigation_agent_automation:
    target: 0.87
    window: "24h"
    description: "Percentage of security investigations completed by AI agents without human intervention"
  
  data_source_integration_coverage:
    target: 0.95
    window: "24h"
    description: "Proportion of configured data sources successfully integrated into agentic workflows"
  
  ai_decision_transparency:
    target: 0.90
    window: "24h"
    description: "Proportion of AI decisions with complete reasoning chain and explainability"
  
  multi_tb_data_processing:
    target: 0.99
    window: "24h"
    description: "Success rate of processing terabyte-scale security data per customer"
  
  agent_workflow_orchestration:
    target: 0.92
    window: "1h"
    description: "Success rate of coordinated multi-agent workflows for complex security investigations"
  
  fine_tuned_model_performance:
    target: 0.94
    window: "7d"
    description: "Performance improvement of fine-tuned LLMs over baseline models for security tasks"
  
  system_availability:
    target: 0.9995
    window: "30d"
    description: "Agentic AI platform uptime and availability for security operations"

safety_thresholds:
  agent_confidence_threshold:
    min: 0.85
    description: "Minimum confidence threshold for autonomous agent decisions"
  llm_inference_cost_limit:
    max: 0.02  # dollars per request
    description: "Maximum cost per LLM inference request to ensure budget control"
  rag_context_relevance_threshold:
    min: 0.80
    description: "Minimum relevance score for RAG-retrieved context to be used in decisions"
  explainability_coverage_threshold:
    min: 0.90
    description: "Minimum proportion of AI decisions that must include reasoning explanations"
  data_processing_latency_p99:
    max: 120  # seconds
    description: "99th percentile latency for processing terabyte-scale security data"
  agent_workflow_timeout:
    max: 300  # seconds (5 minutes)
    description: "Maximum time for multi-agent workflow completion before escalation"

operating_conditions:
  threat_categories: ["malware", "phishing", "insider_threat", "data_exfiltration", "network_intrusion", "ddos", "ransomware"]
  severity_levels: ["low", "medium", "high", "critical"]
  asset_types: ["endpoints", "servers", "network_devices", "cloud_infrastructure", "databases", "applications"]
  agent_workflow_stages: ["initial_triage", "context_enrichment", "multi_agent_analysis", "decision_orchestration", "response_automation", "post_incident_learning"]
  llm_models: ["gpt-4", "claude-3", "llama-2", "mistral-7b", "fine_tuned_security_models"]
  data_processing_scale: ["multi_terabyte_per_customer", "real_time_streaming", "batch_processing", "distributed_analytics"]

collectors:
  - type: "online"
    endpoints: ["http://agent-orchestrator:8080/metrics", "http://llm-gateway:9000/inference", "http://rag-service:8090/retrieval"]
    metrics: ["agent_workflow_performance", "llm_inference_cost", "rag_retrieval_quality", "multi_agent_coordination"]
  - type: "offline"
    log_paths: ["/var/log/agents/", "/var/log/llm-inference/", "/var/log/rag-pipeline/", "/var/log/data-processing/"]
  - type: "environmental"
    sources: ["data_source_connectors", "streaming_pipelines", "vector_databases", "model_serving_infrastructure"]
  - type: "data_integration"
    source_types: ["siem_platforms", "edr_solutions", "network_devices", "cloud_services", "identity_providers", "email_gateways", "web_proxies", "dns_servers", "threat_feeds", "vulnerability_scanners"]
    integration_scale: "100+ data sources per customer"
    data_volume: "terabytes per customer per day"
  - type: "regulatory"
    standards: ["NIST_CSF", "ISO_27001", "SOC2", "GDPR", "HIPAA"]
    compliance_metrics: ["ai_decision_auditability", "data_processing_transparency", "model_bias_monitoring"]

evaluators:
  - type: "performance"
    metrics: ["agentic_triage_accuracy", "agent_workflow_orchestration", "llm_inference_cost_efficiency"]
    real_time_threshold: 120  # seconds
    performance_baselines:
      normal_operation: 60   # seconds
      high_load: 120         # seconds
      cost_optimization: 30  # seconds
  - type: "reliability"
    error_budget_window: "30d"
    critical_metrics: ["system_availability", "multi_tb_data_processing", "agent_workflow_orchestration"]
    reliability_targets:
      mttf: "720h"  # Mean Time To Failure (30 days)
      mttr: "15m"   # Mean Time To Repair
  - type: "cost_optimization"
    metrics: ["llm_inference_cost_efficiency", "data_processing_cost_per_tb", "agent_resource_utilization"]
    cost_targets:
      inference_cost_per_alert: "$0.02"
      data_processing_cost_per_tb: "$50"
      agent_compute_efficiency: "0.85"
  - type: "explainability"
    metrics: ["ai_decision_transparency", "reasoning_chain_completeness", "human_readable_explanations"]
    explainability_requirements:
      decision_transparency: 0.90
      reasoning_depth: "multi_step"
      explanation_quality: "expert_level"
  - type: "rag_performance"
    metrics: ["rag_retrieval_relevance", "context_quality", "knowledge_base_coverage"]
    rag_evaluations:
      retrieval_precision: 0.85
      context_relevance: 0.80
      knowledge_freshness: "daily_updates"
  - type: "drift"
    detection_methods: ["statistical", "llm_performance", "agent_behavior_analysis"]
    drift_metrics: ["agentic_triage_accuracy", "rag_retrieval_relevance", "fine_tuned_model_performance"]
    drift_thresholds:
      statistical: 0.05
      llm_performance: 0.1
      agent_behavior: 0.15

reports:
  - type: "safety"
    frequency: "daily"
    stakeholders: ["soc_manager", "ciso", "security_analysts"]
  - type: "reliability"
    frequency: "weekly"
    stakeholders: ["soc_manager", "it_operations", "security_architects"]
  - type: "performance"
    frequency: "real_time"
    stakeholders: ["soc_analysts", "incident_responders", "security_engineers"]
  - type: "compliance"
    frequency: "monthly"
    stakeholders: ["compliance_officer", "ciso", "audit_team"]

agentic_workflows:
  multi_agent_triage:
    - step: "context_retrieval_agent"
      agent_type: "rag_specialist"
      confidence_threshold: 0.85
      rag_sources: ["threat_intelligence", "historical_incidents", "asset_inventory"]
    - step: "classification_agent"
      agent_type: "llm_classifier"
      confidence_threshold: 0.90
      llm_model: "fine_tuned_security_classifier"
    - step: "severity_assessment_agent"
      agent_type: "risk_analyzer"
      confidence_threshold: 0.87
      human_review_required: false
    - step: "orchestration_agent"
      agent_type: "workflow_coordinator"
      confidence_threshold: 0.85
      next_workflow: "investigation_agents"
  
  investigation_agent_swarm:
    - step: "threat_intelligence_agent"
      agent_type: "intelligence_gatherer"
      confidence_threshold: 0.85
      timeout: 60  # seconds
      rag_enabled: true
    - step: "lateral_movement_agent"
      agent_type: "network_analyzer"
      confidence_threshold: 0.80
      timeout: 300  # seconds
      data_sources: ["network_logs", "endpoint_telemetry"]
    - step: "impact_assessment_agent"
      agent_type: "business_impact_analyzer"
      confidence_threshold: 0.90
      human_review_required: true
      explainability_required: true
  
  response_orchestration_agents:
    - step: "containment_strategy_agent"
      agent_type: "response_strategist"
      confidence_threshold: 0.95
      human_approval_required: true
      cost_optimization: true
    - step: "remediation_planning_agent"
      agent_type: "remediation_planner"
      confidence_threshold: 0.85
      human_approval_required: true
      multi_step_reasoning: true
    - step: "recovery_coordination_agent"
      agent_type: "recovery_orchestrator"
      confidence_threshold: 0.80
      human_approval_required: true
      cross_team_coordination: true

threat_intelligence_rag:
  sources: ["commercial_feeds", "open_source", "government_feeds", "industry_sharing", "historical_incidents", "internal_security_reports"]
  update_frequency: "real_time"
  ioc_types: ["ip_addresses", "domains", "file_hashes", "urls", "email_addresses", "behavioral_patterns"]
  ttp_frameworks: ["MITRE_ATT&CK", "CAPEC", "CWE"]
  rag_components:
    vector_database: "threat_intelligence_embeddings"
    semantic_search: "context_aware_retrieval"
    knowledge_graphs: "threat_actor_relationships"
    embedding_models: ["sentence_transformers", "domain_specific_security_embeddings"]
  confidence_scoring:
    high: 0.90
    medium: 0.70
    low: 0.50
  llm_integration:
    context_enrichment: "automated_threat_analysis"
    natural_language_queries: "analyst_friendly_search"
    report_generation: "human_readable_summaries"

integration_points:
  siem_platforms: ["splunk", "qradar", "sentinel", "logrhythm"]
  edr_solutions: ["crowdstrike", "sentinelone", "carbon_black", "defender"]
  orchestration_tools: ["phantom", "demisto", "swimlane", "siemplify"]
  ticketing_systems: ["servicenow", "jira", "remedy", "freshservice"]
  communication_platforms: ["slack", "teams", "pagerduty", "email"]
  llm_providers: ["openai", "anthropic", "azure_openai", "aws_bedrock", "google_palm"]
  agentic_frameworks: ["langchain", "langgraph", "crewai", "autogen"]
  vector_databases: ["pinecone", "weaviate", "chroma", "qdrant"]
  model_serving: ["huggingface", "aws_sagemaker", "azure_ml", "vertex_ai"]

cost_optimization:
  llm_cost_controls:
    - strategy: "model_routing"
      description: "Route requests to most cost-effective model based on complexity"
    - strategy: "caching"
      description: "Cache similar queries to reduce inference costs"
    - strategy: "fine_tuning"
      description: "Fine-tune smaller models for specific security tasks"
    - strategy: "batch_processing"
      description: "Batch non-urgent requests to optimize throughput"
  
  data_processing_optimization:
    - strategy: "intelligent_sampling"
      description: "Sample high-volume, low-risk data sources"
    - strategy: "compression"
      description: "Compress and archive historical security data"
    - strategy: "tiered_storage"
      description: "Use cost-effective storage for different data temperatures"

dashboard_config:
  monitoring_frequency: "real_time"
  kpi_sources: ["slos", "evaluators", "collectors"]
  alert_integration: ["slack", "email", "pagerduty"]
